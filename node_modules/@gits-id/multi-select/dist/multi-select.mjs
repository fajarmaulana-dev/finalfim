import { defineComponent as be, toRefs as xe, ref as m, computed as F, onBeforeUpdate as Ce, watch as J, openBlock as o, createElementBlock as u, Fragment as C, createElementVNode as c, unref as e, normalizeClass as i, toDisplayString as h, renderList as Q, createBlock as M, mergeProps as K, withCtx as b, createTextVNode as Y, createCommentVNode as f, withKeys as k, withModifiers as S, createVNode as x, toHandlers as ke, Transition as Se, nextTick as we, pushScopeId as Ve, popScopeId as Ie } from "vue";
import { XIcon as Be, ChevronDownIcon as _e, CheckIcon as Z } from "@heroicons/vue/solid";
import L from "@gits-id/badge";
import De from "@gits-id/tooltip";
import { useDebounceFn as Me, onClickOutside as Ae } from "@vueuse/core";
import { useField as Te, ErrorMessage as Ne } from "vee-validate";
const Ee = (l, v) => {
  const w = l.__vccOpts || l;
  for (const [p, y] of v)
    w[p] = y;
  return w;
}, ee = (l) => (Ve("data-v-121e466c"), l = l(), Ie(), l), Oe = ["for"], Pe = { class: "relative mt-1" }, Fe = {
  key: 0,
  class: "flex items-center gap-2 flex-wrap"
}, Ke = ["id", "placeholder", "name", "onKeydown"], Le = { class: "absolute inset-y-0 right-0 flex items-center pr-2" }, $e = /* @__PURE__ */ ee(() => /* @__PURE__ */ c("span", null, "Clear", -1)), je = {
  key: 0,
  class: "absolute inset-y-0 left-0 flex items-center pl-3 text-primary-500"
}, ze = /* @__PURE__ */ ee(() => /* @__PURE__ */ c("div", { class: "border-b h-1" }, null, -1)), He = ["onClick", "onMouseover"], Re = {
  inheritAttrs: !1
}, Ue = /* @__PURE__ */ be({
  ...Re,
  __name: "VMultiSelect",
  props: {
    modelValue: {
      type: Array,
      default: () => []
    },
    items: {
      type: Array,
      default: () => []
    },
    itemText: {
      type: String,
      default: "text"
    },
    itemValue: {
      type: String,
      default: "value"
    },
    searchBy: {
      type: String,
      default: "text"
    },
    maxBadge: {
      type: Number,
      default: 0
    },
    placeholder: {
      type: String,
      default: "Search..."
    },
    delay: {
      type: Number,
      default: 500
    },
    id: {
      type: String,
      default: ""
    },
    name: {
      type: String,
      default: ""
    },
    inputProps: {
      type: Object,
      default: () => ({})
    },
    selectAll: {
      type: Boolean,
      default: !1
    },
    loading: {
      type: Boolean,
      default: !1
    },
    error: {
      type: Boolean,
      default: !1
    },
    errorMessages: {
      type: Array,
      default: () => []
    },
    wrapperClass: {
      type: String,
      default: ""
    },
    inputClass: {
      type: String,
      default: ""
    },
    badgeColor: {
      type: String,
      default: "primary"
    },
    badgeClass: {
      type: String,
      default: ""
    },
    badgeProps: {
      type: Object,
      default: () => ({})
    },
    dropdownClass: {
      type: String,
      default: ""
    },
    itemClass: {
      type: String,
      default: ""
    },
    checkWrapperClass: {
      type: String,
      default: "text-primary-500"
    },
    checkIconClass: {
      type: String,
      default: ""
    },
    noDataClass: {
      type: String,
      default: ""
    },
    loadingClass: {
      type: String,
      default: ""
    },
    label: {
      type: String,
      default: ""
    },
    labelClass: {
      type: String,
      default: "mb-2 block"
    },
    rules: {
      type: String,
      default: ""
    },
    errorClass: {
      type: String,
      default: "text-error-600 mt-1 text-sm"
    }
  },
  emits: [
    "click:outside",
    "update:modelValue",
    "search",
    "selected"
  ],
  setup(l, { emit: v }) {
    const w = l, {
      maxBadge: p,
      items: y,
      modelValue: $,
      placeholder: te,
      id: j,
      delay: le,
      name: V,
      inputProps: ae,
      itemText: A,
      itemValue: T,
      searchBy: se,
      selectAll: re,
      loading: oe,
      rules: ne
    } = xe(w), z = m(null), d = m(!1), I = m(""), n = m(-1), N = m([]), E = m(null), { value: r, errorMessage: O } = Te(V, ne, {
      initialValue: $.value
    }), ue = (t, a) => String(t?.[a])?.toLowerCase()?.includes(I.value.toLowerCase()), ce = (t) => I.value ? [se.value, A.value, T.value].filter(Boolean).some((g) => ue(t, g)) : !0, P = F(() => y.value.filter(ce)), ie = F(
      () => p.value > 0 ? r.value.slice(0, p.value) : r.value
    ), de = (t, a) => {
      t && (N.value[a] = t);
    };
    Ce(() => {
      N.value = [];
    });
    const H = (t) => {
      const a = B(t);
      a > -1 ? r.value.splice(a, 1) : r.value.push(t), v("selected", r);
    }, B = (t) => r.value.findIndex(
      (a) => a[T.value] === t?.[T.value]
    ), fe = (t) => B(t) > -1, R = (t, a) => t.selected || fe(t), U = () => {
      r.value = [], n.value = -1;
    }, pe = (t) => {
      const a = B(t);
      a > -1 && r.value.splice(a, 1);
    }, W = Me((t) => {
      d.value = !0, I.value = t.target.value, n.value = 0, v("search", I);
    }, le.value), _ = F(
      () => r.value.length === y.value.length
    ), ve = () => {
      _.value ? U() : y.value.forEach((t) => {
        B(t) < 0 && r.value.push(t);
      });
    }, ye = () => {
      d.value = !0;
    };
    Ae(z, () => {
      v("click:outside"), d.value = !1;
    });
    const ge = () => {
      const t = P.value[n.value];
      t && H(t);
    }, X = () => {
      d.value || (d.value = !0), n.value === null ? n.value = 0 : n.value < y.value.length - 1 && n.value++, G();
    }, q = () => {
      d.value || (d.value = !0), n.value === null ? n.value = 0 : n.value === 0 ? n.value = -1 : n.value--, G();
    }, me = (t) => {
      t.shiftKey ? q() : X();
    }, he = () => {
      d.value = !1;
    }, G = () => {
      we(() => {
        const t = n.value, s = N.value[t]?.offsetTop - (E.value.offsetHeight - 100);
        E.value?.scrollTo({ top: s, behavior: "smooth" });
      });
    };
    return J(
      $,
      (t) => {
        r.value = t;
      },
      { immediate: !0, deep: !0 }
    ), J(
      r,
      (t) => {
        v("update:modelValue", t);
      },
      { deep: !0 }
    ), (t, a) => (o(), u(C, null, [
      c("div", {
        ref_key: "target",
        ref: z,
        class: ""
      }, [
        c("div", null, [
          c("label", {
            for: e(j) || e(V),
            class: i(l.labelClass)
          }, h(l.label), 11, Oe),
          c("div", Pe, [
            c("div", {
              class: i(["relative w-full py-2 pl-3 pr-10 text-left bg-white rounded-md border cursor-default focus:outline-none sm:text-sm gap-y-1 flex flex-wrap items-center focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-offset-2", [
                l.error || e(O) ? "v-multi-select-error border-error-500" : "v-multi-select-normal border-gray-300 hover:border-gray-400",
                l.wrapperClass
              ]]),
              onClick: a[1] || (a[1] = (s) => s.preventDefault())
            }, [
              e(r).length ? (o(), u("div", Fe, [
                (o(!0), u(C, null, Q(e(ie), (s) => (o(), M(e(L), K({
                  key: s.value,
                  color: l.badgeColor,
                  dismissable: "",
                  small: "",
                  class: ["h-6 truncate", l.badgeClass],
                  onDismiss: (g) => pe(s)
                }, l.badgeProps), {
                  default: b(() => [
                    Y(h(s[e(A)]), 1)
                  ]),
                  _: 2
                }, 1040, ["color", "class", "onDismiss"]))), 128)),
                e(p) > 0 && e(r).length > e(p) ? (o(), M(e(L), {
                  key: 0,
                  small: ""
                }, {
                  default: b(() => [
                    Y(h(e(r).length - e(p)) + " more ", 1)
                  ]),
                  _: 1
                })) : f("", !0)
              ])) : f("", !0),
              c("input", K({
                id: e(j),
                type: "search",
                class: ["border-none px-1 py-1 focus:outline-none focus:!ring-0 focus:!border-none text-sm flex-grow", l.inputClass],
                autofill: "false",
                autocomplete: "off",
                placeholder: e(r).length < 1 ? e(te) : "",
                name: e(V)
              }, e(ae), {
                onInput: a[0] || (a[0] = (...s) => e(W) && e(W)(...s)),
                onFocus: ye,
                onKeydown: [
                  k(S(ge, ["prevent"]), ["enter"]),
                  k(S(X, ["prevent"]), ["down"]),
                  k(S(q, ["prevent"]), ["up"]),
                  k(S(me, ["prevent"]), ["tab"]),
                  k(S(he, ["prevent"]), ["esc"])
                ]
              }), null, 16, Ke),
              c("span", Le, [
                e(r).length > 1 ? (o(), M(e(De), { key: 0 }, {
                  activator: b(({ on: s }) => [
                    x(e(L), K({
                      circle: "",
                      class: "!p-1 !bg-transparent",
                      onClick: U
                    }, ke(s)), {
                      default: b(() => [
                        x(e(Be), { class: "text-gray-400" })
                      ]),
                      _: 2
                    }, 1040)
                  ]),
                  default: b(() => [
                    $e
                  ]),
                  _: 1
                })) : f("", !0),
                x(e(_e), {
                  class: "w-5 h-5 text-gray-400",
                  "aria-hidden": "true"
                })
              ])
            ], 2),
            x(Se, {
              "leave-active-class": "transition duration-100 ease-in",
              "leave-from-class": "opacity-100",
              "leave-to-class": "opacity-0"
            }, {
              default: b(() => [
                d.value ? (o(), u("div", {
                  key: 0,
                  ref_key: "dropdown",
                  ref: E,
                  class: i(["absolute w-full py-1 mt-1 overflow-auto text-base bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm px-0 z-10", l.dropdownClass])
                }, [
                  e(oe) ? (o(), u("div", {
                    key: 0,
                    class: i(["pl-6 pr-4 py-2 text-gray-600", l.loadingClass])
                  }, " Loading... ", 2)) : e(P).length ? (o(), u(C, { key: 1 }, [
                    e(re) ? (o(), u(C, { key: 0 }, [
                      c("div", {
                        class: "bg-white hover:text-primary-500 hover:bg-primary-100 text-gray-900 cursor-default select-none py-2 pl-10 pr-4 relative",
                        onClick: ve
                      }, [
                        c("span", {
                          class: i([
                            e(_) ? "font-medium" : "font-normal",
                            "block truncate"
                          ])
                        }, h(e(_) ? "Deselect All" : "Select All"), 3),
                        e(_) ? (o(), u("span", je, [
                          x(e(Z), {
                            class: "w-5 h-5",
                            "aria-hidden": "true"
                          })
                        ])) : f("", !0)
                      ]),
                      ze
                    ], 64)) : f("", !0),
                    (o(!0), u(C, null, Q(e(P), (s, g) => (o(), u("div", {
                      key: s.value,
                      ref_for: !0,
                      ref: (D) => de(D, g),
                      onClick: (D) => H(s),
                      onMouseover: (D) => n.value = g,
                      onMouseout: a[2] || (a[2] = (D) => n.value = -1)
                    }, [
                      c("div", {
                        class: i(["bg-white hover:text-primary-500 hover:bg-primary-100", [
                          n.value === g ? "text-primary-500 bg-primary-100" : "text-gray-900",
                          "cursor-default select-none relative py-2 pl-10 pr-4",
                          l.itemClass
                        ]])
                      }, [
                        c("span", {
                          class: i([
                            R(s) ? "font-medium" : "font-normal",
                            "block truncate"
                          ])
                        }, h(s[e(A)]), 3),
                        R(s) ? (o(), u("span", {
                          key: 0,
                          class: i(["absolute inset-y-0 left-0 flex items-center pl-3 text-primary-500", l.checkWrapperClass])
                        }, [
                          x(e(Z), {
                            class: i(["w-5 h-5", l.checkIconClass]),
                            "aria-hidden": "true"
                          }, null, 8, ["class"])
                        ], 2)) : f("", !0)
                      ], 2)
                    ], 40, He))), 128))
                  ], 64)) : (o(), u("div", {
                    key: 2,
                    class: i(["pl-6 pr-4 py-2 text-gray-600", l.noDataClass])
                  }, " No Data ", 2))
                ], 2)) : f("", !0)
              ]),
              _: 1
            })
          ])
        ])
      ], 512),
      l.errorMessages.length ? (o(), M(e(Ne), {
        key: 0,
        class: "text-error-600 text-sm",
        name: e(V)
      }, null, 8, ["name"])) : e(O) ? (o(), u("div", {
        key: 1,
        class: i(l.errorClass)
      }, h(e(O)), 3)) : f("", !0)
    ], 64));
  }
}), Ye = /* @__PURE__ */ Ee(Ue, [["__scopeId", "data-v-121e466c"]]);
export {
  Ye as VMultiSelect,
  Ye as default
};
