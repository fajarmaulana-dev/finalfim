import { defineComponent as k, toRefs as v, ref as g, watch as u, computed as C, openBlock as a, createBlock as m, Transition as B, withCtx as x, createElementBlock as f, normalizeClass as y, unref as n, renderSlot as s, createCommentVNode as i, createElementVNode as p, createVNode as S } from "vue";
import b from "@gits-id/icon";
const $ = { class: "alert-content" }, w = {
  key: 0,
  class: "alert-dismissable"
}, I = /* @__PURE__ */ k({
  __name: "VAlert",
  props: {
    modelValue: {
      type: Boolean,
      default: !0
    },
    color: {
      type: String,
      default: "default"
    },
    icon: {
      type: String,
      default: ""
    },
    dismissable: {
      type: Boolean,
      default: !1
    },
    outlined: {
      type: Boolean,
      default: !1
    },
    solid: {
      type: Boolean,
      default: !1
    },
    border: {
      type: String,
      default: ""
    },
    transition: {
      type: String,
      default: "fade"
    },
    iconClass: {
      type: String,
      default: ""
    }
  },
  emits: ["update:modelValue", "dismissed"],
  setup(e, { emit: r }) {
    const l = e, { modelValue: c } = v(l), o = g(c.value);
    u(c, (t) => {
      o.value = t;
    }), u(o, (t) => {
      r("update:modelValue", t);
    });
    const h = C(() => [
      `alert-${l.color}`,
      {
        "alert--outlined": l.outlined,
        "alert--solid": l.solid,
        "alert--bordered": l.border
      }
    ]), d = () => {
      o.value = !1, r("dismissed");
    }, V = {
      info: "heroicons:information-circle",
      success: "heroicons:check-circle",
      warning: "heroicons:exclamation-triangle",
      error: "heroicons:x-circle"
    };
    return (t, A) => (a(), m(B, { name: e.transition }, {
      default: x(() => [
        o.value ? (a(), f("div", {
          key: 0,
          class: y(["alert", n(h)])
        }, [
          s(t.$slots, "icon", { icon: e.icon }, () => [
            e.icon ? (a(), m(n(b), {
              key: 0,
              name: V[e.icon] || e.icon,
              class: y(["alert-icon", e.iconClass])
            }, null, 8, ["name", "class"])) : i("", !0)
          ]),
          p("div", $, [
            s(t.$slots, "default")
          ]),
          e.dismissable ? (a(), f("div", w, [
            s(t.$slots, "x-button", { dismiss: d }, () => [
              p("button", {
                class: "alert-dismissable-button",
                "aria-label": "Close",
                onClick: d
              }, [
                s(t.$slots, "x-icon", {}, () => [
                  S(n(b), {
                    name: "heroicons:x-mark",
                    class: "alert-x-icon"
                  })
                ])
              ])
            ])
          ])) : i("", !0)
        ], 2)) : i("", !0)
      ]),
      _: 3
    }, 8, ["name"]));
  }
});
export {
  I as VAlert,
  I as default
};
