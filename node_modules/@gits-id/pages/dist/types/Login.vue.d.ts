declare const _default: {
    new (...args: any[]): {
        $: import("vue").ComponentInternalInstance;
        $data: {};
        $props: Partial<{
            title: string;
            subtitle: string;
            message: string;
            loading: boolean;
            passwordText: string;
            disabled: boolean;
            register: string;
            email: boolean;
            passwordPath: string;
            usernameText: string;
            forgotPasswordText: string;
            loginText: string;
            hideRememberMe: boolean;
            autocomplete: string;
            btnProps: Record<string, any>;
            btnRegisterProps: Record<string, any>;
        }> & Omit<Readonly<import("vue").ExtractPropTypes<{
            message: {
                type: StringConstructor;
                default: string;
            };
            loading: {
                type: BooleanConstructor;
                default: boolean;
            };
            title: {
                type: StringConstructor;
                default: string;
            };
            subtitle: {
                type: StringConstructor;
                default: string;
            };
            passwordPath: {
                type: StringConstructor;
                default: string;
            };
            register: {
                type: StringConstructor;
                default: string;
            };
            usernameText: {
                type: StringConstructor;
                default: string;
            };
            passwordText: {
                type: StringConstructor;
                default: string;
            };
            forgotPasswordText: {
                type: StringConstructor;
                default: string;
            };
            loginText: {
                type: StringConstructor;
                default: string;
            };
            hideRememberMe: {
                type: BooleanConstructor;
                default: boolean;
            };
            email: {
                type: BooleanConstructor;
                default: boolean;
            };
            disabled: {
                type: BooleanConstructor;
                default: boolean;
            };
            autocomplete: {
                type: StringConstructor;
                default: string;
            };
            btnProps: {
                type: ObjectConstructor;
                default: () => {};
            };
            btnRegisterProps: {
                type: ObjectConstructor;
                default: () => {};
            };
        }>> & {
            onSubmit?: ((...args: any[]) => any) | undefined;
            onLoginSSO?: ((...args: any[]) => any) | undefined;
        } & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, "title" | "subtitle" | "message" | "loading" | "passwordText" | "disabled" | "register" | "email" | "passwordPath" | "usernameText" | "forgotPasswordText" | "loginText" | "hideRememberMe" | "autocomplete" | "btnProps" | "btnRegisterProps">;
        $attrs: {
            [x: string]: unknown;
        };
        $refs: {
            [x: string]: unknown;
        };
        $slots: Readonly<{
            [name: string]: import("vue").Slot | undefined;
        }>;
        $root: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
        $parent: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
        $emit: (event: "submit" | "loginSSO", ...args: any[]) => void;
        $el: any;
        $options: import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
            message: {
                type: StringConstructor;
                default: string;
            };
            loading: {
                type: BooleanConstructor;
                default: boolean;
            };
            title: {
                type: StringConstructor;
                default: string;
            };
            subtitle: {
                type: StringConstructor;
                default: string;
            };
            passwordPath: {
                type: StringConstructor;
                default: string;
            };
            register: {
                type: StringConstructor;
                default: string;
            };
            usernameText: {
                type: StringConstructor;
                default: string;
            };
            passwordText: {
                type: StringConstructor;
                default: string;
            };
            forgotPasswordText: {
                type: StringConstructor;
                default: string;
            };
            loginText: {
                type: StringConstructor;
                default: string;
            };
            hideRememberMe: {
                type: BooleanConstructor;
                default: boolean;
            };
            email: {
                type: BooleanConstructor;
                default: boolean;
            };
            disabled: {
                type: BooleanConstructor;
                default: boolean;
            };
            autocomplete: {
                type: StringConstructor;
                default: string;
            };
            btnProps: {
                type: ObjectConstructor;
                default: () => {};
            };
            btnRegisterProps: {
                type: ObjectConstructor;
                default: () => {};
            };
        }>> & {
            onSubmit?: ((...args: any[]) => any) | undefined;
            onLoginSSO?: ((...args: any[]) => any) | undefined;
        }, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("submit" | "loginSSO")[], string, {
            title: string;
            subtitle: string;
            message: string;
            loading: boolean;
            passwordText: string;
            disabled: boolean;
            register: string;
            email: boolean;
            passwordPath: string;
            usernameText: string;
            forgotPasswordText: string;
            loginText: string;
            hideRememberMe: boolean;
            autocomplete: string;
            btnProps: Record<string, any>;
            btnRegisterProps: Record<string, any>;
        }> & {
            beforeCreate?: ((() => void) | (() => void)[]) | undefined;
            created?: ((() => void) | (() => void)[]) | undefined;
            beforeMount?: ((() => void) | (() => void)[]) | undefined;
            mounted?: ((() => void) | (() => void)[]) | undefined;
            beforeUpdate?: ((() => void) | (() => void)[]) | undefined;
            updated?: ((() => void) | (() => void)[]) | undefined;
            activated?: ((() => void) | (() => void)[]) | undefined;
            deactivated?: ((() => void) | (() => void)[]) | undefined;
            beforeDestroy?: ((() => void) | (() => void)[]) | undefined;
            beforeUnmount?: ((() => void) | (() => void)[]) | undefined;
            destroyed?: ((() => void) | (() => void)[]) | undefined;
            unmounted?: ((() => void) | (() => void)[]) | undefined;
            renderTracked?: (((e: import("vue").DebuggerEvent) => void) | ((e: import("vue").DebuggerEvent) => void)[]) | undefined;
            renderTriggered?: (((e: import("vue").DebuggerEvent) => void) | ((e: import("vue").DebuggerEvent) => void)[]) | undefined;
            errorCaptured?: (((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null, info: string) => boolean | void) | ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null, info: string) => boolean | void)[]) | undefined;
        };
        $forceUpdate: () => void;
        $nextTick: typeof import("vue").nextTick;
        $watch(source: string | Function, cb: Function, options?: import("vue").WatchOptions<boolean> | undefined): import("vue").WatchStopHandle;
    } & Readonly<import("vue").ExtractPropTypes<{
        message: {
            type: StringConstructor;
            default: string;
        };
        loading: {
            type: BooleanConstructor;
            default: boolean;
        };
        title: {
            type: StringConstructor;
            default: string;
        };
        subtitle: {
            type: StringConstructor;
            default: string;
        };
        passwordPath: {
            type: StringConstructor;
            default: string;
        };
        register: {
            type: StringConstructor;
            default: string;
        };
        usernameText: {
            type: StringConstructor;
            default: string;
        };
        passwordText: {
            type: StringConstructor;
            default: string;
        };
        forgotPasswordText: {
            type: StringConstructor;
            default: string;
        };
        loginText: {
            type: StringConstructor;
            default: string;
        };
        hideRememberMe: {
            type: BooleanConstructor;
            default: boolean;
        };
        email: {
            type: BooleanConstructor;
            default: boolean;
        };
        disabled: {
            type: BooleanConstructor;
            default: boolean;
        };
        autocomplete: {
            type: StringConstructor;
            default: string;
        };
        btnProps: {
            type: ObjectConstructor;
            default: () => {};
        };
        btnRegisterProps: {
            type: ObjectConstructor;
            default: () => {};
        };
    }>> & {
        onSubmit?: ((...args: any[]) => any) | undefined;
        onLoginSSO?: ((...args: any[]) => any) | undefined;
    } & import("vue").ShallowUnwrapRef<{}> & {} & import("vue").ComponentCustomProperties;
    __isFragment?: undefined;
    __isTeleport?: undefined;
    __isSuspense?: undefined;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    message: {
        type: StringConstructor;
        default: string;
    };
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: {
        type: StringConstructor;
        default: string;
    };
    subtitle: {
        type: StringConstructor;
        default: string;
    };
    passwordPath: {
        type: StringConstructor;
        default: string;
    };
    register: {
        type: StringConstructor;
        default: string;
    };
    usernameText: {
        type: StringConstructor;
        default: string;
    };
    passwordText: {
        type: StringConstructor;
        default: string;
    };
    forgotPasswordText: {
        type: StringConstructor;
        default: string;
    };
    loginText: {
        type: StringConstructor;
        default: string;
    };
    hideRememberMe: {
        type: BooleanConstructor;
        default: boolean;
    };
    email: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    autocomplete: {
        type: StringConstructor;
        default: string;
    };
    btnProps: {
        type: ObjectConstructor;
        default: () => {};
    };
    btnRegisterProps: {
        type: ObjectConstructor;
        default: () => {};
    };
}>> & {
    onSubmit?: ((...args: any[]) => any) | undefined;
    onLoginSSO?: ((...args: any[]) => any) | undefined;
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("submit" | "loginSSO")[], "submit" | "loginSSO", {
    title: string;
    subtitle: string;
    message: string;
    loading: boolean;
    passwordText: string;
    disabled: boolean;
    register: string;
    email: boolean;
    passwordPath: string;
    usernameText: string;
    forgotPasswordText: string;
    loginText: string;
    hideRememberMe: boolean;
    autocomplete: string;
    btnProps: Record<string, any>;
    btnRegisterProps: Record<string, any>;
}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & (new () => {
    $slots: typeof import('./Login.vue.__VLS_template').default;
});
export default _default;
