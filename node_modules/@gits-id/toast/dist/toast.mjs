import { defineComponent as ee, toRefs as te, ref as D, computed as w, onUnmounted as oe, watch as k, openBlock as r, createElementBlock as I, Fragment as ae, renderSlot as p, createVNode as u, unref as e, withCtx as n, createElementVNode as y, createBlock as m, createCommentVNode as l, mergeProps as F, normalizeClass as s, createTextVNode as O, toDisplayString as P } from "vue";
import { TransitionRoot as se, Dialog as re, TransitionChild as M, DialogOverlay as le, DialogTitle as ne } from "@headlessui/vue";
import { CheckIcon as ie, XIcon as j, ExclamationIcon as ce, QuestionMarkCircleIcon as ue } from "@heroicons/vue/outline";
import $ from "@gits-id/button";
import { defineStore as me } from "pinia";
import { useStore as de } from "vuex";
const fe = { class: "fixed inset-0 z-30 overflow-y-auto" }, pe = { class: "relative min-h-screen p-4" }, ye = { class: "flex-grow" }, he = { key: 0 }, ge = {
  inheritAttrs: !1
}, Se = ee({
  ...ge,
  __name: "VToast",
  props: {
    modelValue: { type: Boolean, default: !1 },
    title: { type: String, default: "" },
    confirm: { type: Boolean, default: !1 },
    confirmColor: { type: String, default: "primary" },
    confirmProps: {
      type: Object,
      default: () => ({})
    },
    confirmText: {
      type: String,
      default: "Confirm"
    },
    closeText: {
      type: String,
      default: "Close"
    },
    closeProps: {
      type: Object,
      default: () => ({})
    },
    headerClass: { type: String, default: "" },
    bodyClass: { type: String, default: "" },
    actionsClass: { type: String, default: "" },
    placement: { type: String, default: "bottom" },
    actions: { type: Boolean, default: !1 },
    timeout: { type: Number, default: 0 },
    hideXIcon: { type: Boolean, default: !1 },
    overlay: { type: Boolean, default: !1 },
    color: { type: String, default: "white" },
    type: { type: String, default: "" },
    loading: { type: Boolean, default: !1 },
    persistent: { type: Boolean, default: !1 }
  },
  emits: ["update:modelValue", "confirm", "close", "open"],
  setup(t, { emit: o }) {
    const h = t, {
      modelValue: d,
      title: g,
      confirm: i,
      confirmColor: c,
      confirmProps: q,
      confirmText: z,
      closeText: E,
      closeProps: L,
      placement: S,
      actions: A,
      timeout: N,
      type: b,
      hideXIcon: R,
      overlay: Q,
      color: _,
      loading: C,
      persistent: U
    } = te(h), f = D(d.value), V = D(null), x = D(C.value);
    function v() {
      C.value && U.value || (f.value = !1, o("update:modelValue", !1), o("close"));
    }
    function X() {
      f.value = !0, o("update:modelValue", !0), o("open");
    }
    const G = () => {
      x.value = !0;
    }, H = () => {
      x.value = !1;
    }, J = () => {
      o("confirm", {
        open: X,
        close: v,
        startLoading: G,
        finishLoading: H
      });
    }, K = w(() => {
      switch (S.value) {
        case "top":
          return "top-4 left-1/2 transform -translate-x-1/2";
        case "top-start":
          return "top-4 left-4";
        case "top-end":
          return "top-4 right-4";
        case "bottom":
          return "bottom-4 left-1/2 transform -translate-x-1/2";
        case "bottom-start":
          return "bottom-4 left-4";
        case "bottom-end":
          return "bottom-4 right-4";
        case "center":
          return "top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2";
        default:
          return S;
      }
    }), W = w(() => {
      switch (S.value) {
        case "top":
        case "top-start":
        case "top-end":
          return {
            enter: "duration-300 ease-out",
            enterFrom: "opacity-0 -translate-y-full",
            enterTo: "opacity-100",
            leave: "duration-200 ease-in",
            leaveFrom: "opacity-100",
            leaveTo: "opacity-0 -translate-y-full"
          };
        case "bottom":
        case "bottom-start":
        case "bottom-end":
          return {
            enter: "duration-300 ease-out",
            enterFrom: "opacity-0 translate-y-full",
            enterTo: "opacity-100",
            leave: "duration-200 ease-in",
            leaveFrom: "opacity-100",
            leaveTo: "opacity-0 translate-y-full"
          };
        default:
          return {
            enter: "duration-300 ease-out",
            enterFrom: "opacity-0 scale-95",
            enterTo: "opacity-100 scale-100",
            leave: "duration-200 ease-in",
            leaveFrom: "opacity-100 scale-100",
            leaveTo: "opacity-0 scale-95"
          };
      }
    });
    function Y() {
      clearTimeout(V.value), V.value = setTimeout(() => {
        v();
      }, N.value);
    }
    oe(() => {
      clearTimeout(V.value);
    }), k(d, (a) => f.value = a), k(
      f,
      (a) => {
        o("update:modelValue", a), N.value > 0 && Y();
      },
      { immediate: !0 }
    ), k(
      d,
      (a) => {
        f.value = a;
      },
      { immediate: !0 }
    ), k(
      C,
      (a) => {
        x.value = a;
      },
      { immediate: !0 }
    );
    const Z = w(() => {
      switch (_.value) {
        case "primary":
          return "bg-primary";
        case "secondary":
          return "bg-secondary";
        case "warning":
          return "bg-warning";
        case "info":
          return "bg-info";
        case "error":
          return "bg-error";
        case "black":
          return "bg-black";
        default:
          return "bg-white";
      }
    }), B = w(() => {
      switch (_.value) {
        case "primary":
        case "secondary":
        case "warning":
        case "info":
        case "error":
        case "black":
          return "text-white";
        default:
          return "";
      }
    }), T = w(() => {
      switch (_.value) {
        case "primary":
        case "secondary":
        case "info":
        case "warning":
        case "error":
          return "text-white";
        default:
          return "";
      }
    });
    return (a, ve) => (r(), I(ae, null, [
      p(a.$slots, "activator", { open: X }),
      u(e(se), {
        appear: "",
        show: f.value,
        as: "template"
      }, {
        default: n(() => [
          u(e(re), {
            as: "div",
            onClose: v
          }, {
            default: n(() => [
              y("div", fe, [
                y("div", pe, [
                  e(Q) ? (r(), m(e(M), {
                    key: 0,
                    as: "template",
                    enter: "duration-300 ease-out",
                    "enter-from": "opacity-0",
                    "enter-to": "opacity-100",
                    leave: "duration-200 ease-in",
                    "leave-from": "opacity-100",
                    "leave-to": "opacity-0"
                  }, {
                    default: n(() => [
                      u(e(le), { class: "fixed bg-black bg-opacity-50 inset-0" })
                    ]),
                    _: 1
                  })) : l("", !0),
                  u(e(M), F({ as: "template" }, e(W)), {
                    default: n(() => [
                      y("div", {
                        class: s(["inline-block w-full max-w-sm p-4 overflow-hidden text-left transition-all transform shadow-xl rounded-lg border absolute", [e(K), e(Z)]])
                      }, [
                        y("div", {
                          class: s(["flex gap-4", e(g) ? "items-start" : "items-center"])
                        }, [
                          p(a.$slots, "media", {}, () => [
                            e(b) === "success" ? (r(), m(e(ie), {
                              key: 0,
                              class: s(["w-6 h-6", e(T) || "text-success"])
                            }, null, 8, ["class"])) : l("", !0),
                            e(b) === "error" ? (r(), m(e(j), {
                              key: 1,
                              class: s(["w-6 h-6", e(T) || "text-error"])
                            }, null, 8, ["class"])) : l("", !0),
                            e(b) === "warning" ? (r(), m(e(ce), {
                              key: 2,
                              class: s(["w-6 h-6", e(T) || "text-warning"])
                            }, null, 8, ["class"])) : l("", !0),
                            e(b) === "question" ? (r(), m(e(ue), {
                              key: 3,
                              class: s(["w-6 h-6", e(T) || "text-info"])
                            }, null, 8, ["class"])) : l("", !0)
                          ]),
                          y("div", ye, [
                            e(g) ? (r(), m(e(ne), {
                              key: 0,
                              as: "h3",
                              class: s(["font-semibold leading-6 mb-1", [t.headerClass, e(B)]])
                            }, {
                              default: n(() => [
                                p(a.$slots, "header", {}, () => [
                                  O(P(e(g)), 1)
                                ])
                              ]),
                              _: 3
                            }, 8, ["class"])) : l("", !0),
                            y("div", {
                              class: s(["text-sm", [t.bodyClass, e(B)]])
                            }, [
                              p(a.$slots, "default")
                            ], 2),
                            e(A) ? (r(), I("div", {
                              key: 1,
                              class: s(["flex justify-start gap-2 pt-4", t.actionsClass])
                            }, [
                              p(a.$slots, "actions", {}, () => [
                                e(i) ? (r(), m(e($), F({
                                  key: 0,
                                  color: e(c),
                                  loading: x.value
                                }, e(q), { onClick: J }), {
                                  default: n(() => [
                                    O(P(e(z)), 1)
                                  ]),
                                  _: 1
                                }, 16, ["color", "loading"])) : l("", !0),
                                u(e($), F(e(L), {
                                  disabled: e(C),
                                  onClick: v
                                }), {
                                  default: n(() => [
                                    O(P(e(E)), 1)
                                  ]),
                                  _: 1
                                }, 16, ["disabled"])
                              ])
                            ], 2)) : l("", !0)
                          ]),
                          e(R) ? l("", !0) : (r(), I("div", he, [
                            p(a.$slots, "rightActions", {}, () => [
                              u(e($), {
                                icon: "",
                                rounded: "",
                                text: "",
                                "no-ring": "",
                                size: "xs",
                                class: s([e(g) ? "-m-2" : ""]),
                                onClick: v
                              }, {
                                default: n(() => [
                                  u(e(j), {
                                    class: s(["w-5 h-5", e(B)])
                                  }, null, 8, ["class"])
                                ]),
                                _: 1
                              }, 8, ["class"])
                            ])
                          ]))
                        ], 2)
                      ], 2)
                    ]),
                    _: 3
                  }, 16)
                ])
              ])
            ]),
            _: 3
          })
        ]),
        _: 3
      }, 8, ["show"])
    ], 64));
  }
}), _e = me("toast", {
  state: () => ({
    isOpen: !1,
    message: "",
    options: {
      color: "black",
      timeout: 3e3
    }
  }),
  getters: {},
  actions: {
    show(t, o) {
      this.message = t, this.isOpen = !0, this.options = { ...this.options, ...o };
    },
    confirm(t, o) {
      return this.show(t, {
        type: "question",
        actions: !0,
        confirm: !0,
        placement: "center",
        hideXIcon: !0,
        overlay: !0,
        timeout: 0,
        color: "",
        persistent: !0,
        ...o
      });
    },
    confirmDelete(t, o) {
      return this.confirm(t, {
        confirmColor: "error",
        confirmText: "Delete",
        closeText: "Cancel",
        ...o
      });
    }
  }
}), Ve = () => ({
  namespaced: !0,
  state: () => ({
    show: !1,
    message: "",
    options: {
      color: "black",
      timeout: 3e3
    }
  }),
  mutations: {
    show(t, { message: o, options: h }) {
      t.message = o, t.show = !0, t.options = { ...t.options, ...h };
    },
    reset(t) {
      t.show = !1, t.message = "", t.options = {
        color: "black",
        timeout: 3e3
      };
    }
  },
  getters: {
    message: (t) => t.message,
    show: (t) => t.show,
    options: (t) => t.options
  }
}), Be = () => {
  const t = de(), o = (i, c) => {
    t.commit("toast/show", { message: i, options: c });
  }, h = () => {
    t.commit("toast/reset");
  }, d = (i, c) => {
    o(i, {
      type: "question",
      actions: !0,
      confirm: !0,
      placement: "center",
      hideXIcon: !0,
      overlay: !0,
      timeout: 0,
      color: "",
      persistent: !0,
      ...c
    });
  };
  return { show: o, reset: h, confirm: d, confirmDelete: (i, c) => {
    d(i, {
      confirmColor: "error",
      confirmText: "Delete",
      closeText: "Cancel",
      ...c
    });
  } };
};
export {
  Se as VToast,
  Se as default,
  Ve as toastModule,
  Be as useToast,
  _e as useToastStore
};
