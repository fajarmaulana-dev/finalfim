import { toRefs as c, ref as o, openBlock as d, createElementBlock as f, Fragment as m, createElementVNode as s, normalizeClass as p, renderSlot as i, normalizeStyle as v } from "vue";
import { createPopper as y } from "@popperjs/core";
const g = /* @__PURE__ */ s("div", {
  id: "arrow",
  "data-popper-arrow": ""
}, null, -1), x = {
  __name: "VTooltip",
  props: {
    placement: {
      type: String,
      default: "top"
    },
    options: {
      type: Object,
      default: () => ({})
    },
    activatorClass: {
      type: String,
      default: ""
    },
    tooltipClass: {
      type: String,
      default: "inline-block shadow px-3 py-2 rounded bg-[#000] text-white p-2 rounded max-w-[300px]"
    }
  },
  setup(l) {
    const t = l;
    c(t);
    const a = o(!1), n = o(null), r = o(null), u = o({
      mouseover: () => {
        a.value = !0;
        const e = {
          top: [0, 20],
          "top-start": [0, 20],
          "top-end": [0, 20],
          bottom: [0, 20],
          "bottom-start": [0, 20],
          "bottom-end": [0, 20],
          right: [0, 10],
          "right-start": [0, 10],
          "right-end": [0, 10],
          left: [0, 10],
          "left-start": [0, 10],
          "left-end": [0, 10]
        };
        y(n.value, r.value, {
          placement: t.placement,
          modifiers: [
            {
              name: "offset",
              options: {
                offset: e[t.placement]
              }
            }
          ],
          ...t.options
        });
      },
      mouseout: () => {
        a.value = !1;
      }
    });
    return (e, h) => (d(), f(m, null, [
      s("span", {
        id: "tooltipActivator",
        ref_key: "target",
        ref: n,
        "aria-describedby": "tooltip",
        class: p(l.activatorClass)
      }, [
        i(e.$slots, "activator", { on: u.value })
      ], 2),
      s("span", {
        id: "tooltip",
        ref_key: "tooltip",
        ref: r,
        role: "tooltip",
        class: p(["tooltip", l.tooltipClass]),
        style: v({ display: a.value ? "block" : "none" })
      }, [
        i(e.$slots, "default"),
        g
      ], 6)
    ], 64));
  }
};
export {
  x as VTooltip,
  x as default
};
