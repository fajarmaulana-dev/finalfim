declare const _default: {
    new (...args: any[]): {
        $: import("vue").ComponentInternalInstance;
        $data: {};
        $props: Partial<{
            title: string;
            flat: boolean;
            defaultWrapperClass: string;
            defaultHeaderClass: string;
            defaultFooterClass: string;
            defaultBodyClass: string;
            wrapperClass: string;
            headerClass: string;
            footerClass: string;
            bodyClass: string;
            hideHeader: boolean;
            hideFooter: boolean;
            bordered: boolean;
            to: string;
        }> & Omit<Readonly<import("vue").ExtractPropTypes<{
            title: {
                type: StringConstructor;
                default: string;
            };
            defaultWrapperClass: {
                type: StringConstructor;
                default: string;
            };
            defaultHeaderClass: {
                type: StringConstructor;
                default: string;
            };
            defaultFooterClass: {
                type: StringConstructor;
                default: string;
            };
            defaultBodyClass: {
                type: StringConstructor;
                default: string;
            };
            wrapperClass: {
                type: StringConstructor;
                default: string;
            };
            headerClass: {
                type: StringConstructor;
                default: string;
            };
            footerClass: {
                type: StringConstructor;
                default: string;
            };
            bodyClass: {
                type: StringConstructor;
                default: string;
            };
            hideHeader: {
                type: BooleanConstructor;
                default: boolean;
            };
            hideFooter: {
                type: BooleanConstructor;
                default: boolean;
            };
            bordered: {
                type: BooleanConstructor;
                default: boolean;
            };
            flat: {
                type: BooleanConstructor;
                default: boolean;
            };
            to: {
                type: StringConstructor;
                default: string;
            };
        }>> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, "title" | "flat" | "defaultWrapperClass" | "defaultHeaderClass" | "defaultFooterClass" | "defaultBodyClass" | "wrapperClass" | "headerClass" | "footerClass" | "bodyClass" | "hideHeader" | "hideFooter" | "bordered" | "to">;
        $attrs: {
            [x: string]: unknown;
        };
        $refs: {
            [x: string]: unknown;
        };
        $slots: Readonly<{
            [name: string]: import("vue").Slot | undefined;
        }>;
        $root: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
        $parent: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
        $emit: (event: string, ...args: any[]) => void;
        $el: any;
        $options: import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
            title: {
                type: StringConstructor;
                default: string;
            };
            defaultWrapperClass: {
                type: StringConstructor;
                default: string;
            };
            defaultHeaderClass: {
                type: StringConstructor;
                default: string;
            };
            defaultFooterClass: {
                type: StringConstructor;
                default: string;
            };
            defaultBodyClass: {
                type: StringConstructor;
                default: string;
            };
            wrapperClass: {
                type: StringConstructor;
                default: string;
            };
            headerClass: {
                type: StringConstructor;
                default: string;
            };
            footerClass: {
                type: StringConstructor;
                default: string;
            };
            bodyClass: {
                type: StringConstructor;
                default: string;
            };
            hideHeader: {
                type: BooleanConstructor;
                default: boolean;
            };
            hideFooter: {
                type: BooleanConstructor;
                default: boolean;
            };
            bordered: {
                type: BooleanConstructor;
                default: boolean;
            };
            flat: {
                type: BooleanConstructor;
                default: boolean;
            };
            to: {
                type: StringConstructor;
                default: string;
            };
        }>>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, {
            title: string;
            flat: boolean;
            defaultWrapperClass: string;
            defaultHeaderClass: string;
            defaultFooterClass: string;
            defaultBodyClass: string;
            wrapperClass: string;
            headerClass: string;
            footerClass: string;
            bodyClass: string;
            hideHeader: boolean;
            hideFooter: boolean;
            bordered: boolean;
            to: string;
        }> & {
            beforeCreate?: ((() => void) | (() => void)[]) | undefined;
            created?: ((() => void) | (() => void)[]) | undefined;
            beforeMount?: ((() => void) | (() => void)[]) | undefined;
            mounted?: ((() => void) | (() => void)[]) | undefined;
            beforeUpdate?: ((() => void) | (() => void)[]) | undefined;
            updated?: ((() => void) | (() => void)[]) | undefined;
            activated?: ((() => void) | (() => void)[]) | undefined;
            deactivated?: ((() => void) | (() => void)[]) | undefined;
            beforeDestroy?: ((() => void) | (() => void)[]) | undefined;
            beforeUnmount?: ((() => void) | (() => void)[]) | undefined;
            destroyed?: ((() => void) | (() => void)[]) | undefined;
            unmounted?: ((() => void) | (() => void)[]) | undefined;
            renderTracked?: (((e: import("vue").DebuggerEvent) => void) | ((e: import("vue").DebuggerEvent) => void)[]) | undefined;
            renderTriggered?: (((e: import("vue").DebuggerEvent) => void) | ((e: import("vue").DebuggerEvent) => void)[]) | undefined;
            errorCaptured?: (((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null, info: string) => boolean | void) | ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null, info: string) => boolean | void)[]) | undefined;
        };
        $forceUpdate: () => void;
        $nextTick: typeof import("vue").nextTick;
        $watch(source: string | Function, cb: Function, options?: import("vue").WatchOptions<boolean> | undefined): import("vue").WatchStopHandle;
    } & Readonly<import("vue").ExtractPropTypes<{
        title: {
            type: StringConstructor;
            default: string;
        };
        defaultWrapperClass: {
            type: StringConstructor;
            default: string;
        };
        defaultHeaderClass: {
            type: StringConstructor;
            default: string;
        };
        defaultFooterClass: {
            type: StringConstructor;
            default: string;
        };
        defaultBodyClass: {
            type: StringConstructor;
            default: string;
        };
        wrapperClass: {
            type: StringConstructor;
            default: string;
        };
        headerClass: {
            type: StringConstructor;
            default: string;
        };
        footerClass: {
            type: StringConstructor;
            default: string;
        };
        bodyClass: {
            type: StringConstructor;
            default: string;
        };
        hideHeader: {
            type: BooleanConstructor;
            default: boolean;
        };
        hideFooter: {
            type: BooleanConstructor;
            default: boolean;
        };
        bordered: {
            type: BooleanConstructor;
            default: boolean;
        };
        flat: {
            type: BooleanConstructor;
            default: boolean;
        };
        to: {
            type: StringConstructor;
            default: string;
        };
    }>> & import("vue").ShallowUnwrapRef<{}> & {} & import("vue").ComponentCustomProperties;
    __isFragment?: undefined;
    __isTeleport?: undefined;
    __isSuspense?: undefined;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    title: {
        type: StringConstructor;
        default: string;
    };
    defaultWrapperClass: {
        type: StringConstructor;
        default: string;
    };
    defaultHeaderClass: {
        type: StringConstructor;
        default: string;
    };
    defaultFooterClass: {
        type: StringConstructor;
        default: string;
    };
    defaultBodyClass: {
        type: StringConstructor;
        default: string;
    };
    wrapperClass: {
        type: StringConstructor;
        default: string;
    };
    headerClass: {
        type: StringConstructor;
        default: string;
    };
    footerClass: {
        type: StringConstructor;
        default: string;
    };
    bodyClass: {
        type: StringConstructor;
        default: string;
    };
    hideHeader: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideFooter: {
        type: BooleanConstructor;
        default: boolean;
    };
    bordered: {
        type: BooleanConstructor;
        default: boolean;
    };
    flat: {
        type: BooleanConstructor;
        default: boolean;
    };
    to: {
        type: StringConstructor;
        default: string;
    };
}>>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, {
    title: string;
    flat: boolean;
    defaultWrapperClass: string;
    defaultHeaderClass: string;
    defaultFooterClass: string;
    defaultBodyClass: string;
    wrapperClass: string;
    headerClass: string;
    footerClass: string;
    bodyClass: string;
    hideHeader: boolean;
    hideFooter: boolean;
    bordered: boolean;
    to: string;
}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & (new () => {
    $slots: typeof import('./VCard.vue.__VLS_template').default;
});
export default _default;
