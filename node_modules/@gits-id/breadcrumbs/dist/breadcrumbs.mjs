import { defineComponent as m, resolveComponent as d, openBlock as o, createElementBlock as l, Fragment as u, renderList as p, renderSlot as a, createBlock as f, resolveDynamicComponent as y, unref as v, normalizeClass as C, withCtx as g, createTextVNode as k, toDisplayString as i, createElementVNode as h, createCommentVNode as x } from "vue";
const _ = { class: "mb-3 flex gap-2 items-center" }, B = { class: "text-sm text-gray-400 font-medium mx-0" }, $ = /* @__PURE__ */ m({
  __name: "VBreadcrumbs",
  props: {
    items: {
      type: Array,
      default: () => []
    },
    divider: {
      type: String,
      default: "/"
    },
    customClass: {
      type: String,
      default: ""
    },
    activeColor: {
      type: String,
      default: "!text-primary-500"
    }
  },
  setup(n) {
    const e = n, c = d("RouterLink");
    return (s, S) => (o(), l("div", _, [
      (o(!0), l(u, null, p(e.items, (r, t) => a(s.$slots, `item.${t}`, { key: t }, () => [
        (o(), f(y(r.to ? v(c) : "span"), {
          to: r.to,
          class: C([[n.customClass], "font-medium hover:text-primary-700"]),
          "exact-active-class": e.activeColor
        }, {
          default: g(() => [
            a(s.$slots, `title.${t}`, {}, () => [
              k(i(r.title), 1)
            ])
          ]),
          _: 2
        }, 1032, ["to", "class", "exact-active-class"])),
        t + 1 < e.items.length ? a(s.$slots, "divider", { key: 0 }, () => [
          h("span", B, i(e.divider), 1)
        ]) : x("", !0)
      ])), 128))
    ]));
  }
});
export {
  $ as VBreadcrumbs,
  $ as default
};
