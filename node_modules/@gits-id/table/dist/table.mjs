import { defineComponent as Z, toRefs as _, ref as T, computed as y, watch as m, openBlock as i, createElementBlock as f, normalizeClass as c, renderSlot as g, normalizeProps as Q, guardReactiveProps as W, unref as t, createVNode as I, createElementVNode as r, toDisplayString as u, mergeProps as ee, createSlots as me, renderList as E, withCtx as pe, Fragment as J, isRef as fe, withModifiers as ye, createBlock as X, createCommentVNode as L, createTextVNode as H } from "vue";
import ve from "@gits-id/pagination";
import be from "@gits-id/select";
import { ChevronDownIcon as he, ChevronUpIcon as Pe } from "@heroicons/vue/solid";
import xe from "@gits-id/spinner";
import { VCheckbox as Y } from "@gits-id/forms";
import { get as we } from "@gits-id/utils";
const Se = { class: "w-auto hidden sm:flex gap-1 items-center text-sm text-gray-700 order-2" }, Ce = { class: "hidden sm:inline" }, Ve = { class: "font-semibold" }, ke = /* @__PURE__ */ r("span", null, "-", -1), $e = { class: "font-semibold" }, Be = { class: "font-semibold" }, Te = { class: "hidden sm:inline" }, Ne = /* @__PURE__ */ r("div", { class: "flex-grow order-1 sm:order-3" }, "\xA0", -1), De = { class: "w-auto flex justify-center sm:justify-end order-3 sm:order-4" }, Ie = /* @__PURE__ */ Z({
  __name: "VDataTablePagination",
  props: {
    modelValue: {
      type: Number,
      default: 1
    },
    totalItems: {
      type: Number,
      default: 0
    },
    itemsPerPage: {
      type: Number,
      default: 10
    },
    itemsPerPageOptions: {
      type: Array,
      default: () => [10, 25, 50, 100]
    },
    showingText: {
      type: String,
      default: "Showing"
    },
    backgroundColor: {
      type: String,
      default: ""
    },
    dataText: {
      type: String,
      default: "data"
    },
    fromText: {
      type: String,
      default: "from"
    },
    pagination: {
      type: Object,
      default: () => ({})
    }
  },
  emits: [
    "update:modelValue",
    "update:itemsPerPage",
    "update:perPage",
    "update:itemsPerPageOptions"
  ],
  setup(a, { emit: n }) {
    const N = a, { modelValue: z, totalItems: v, itemsPerPage: w, itemsPerPageOptions: O } = _(N), h = T(z.value), A = y(
      () => v.value > 0 ? (h.value - 1) * w.value + 1 : 1
    ), S = y(
      () => v.value > 0 ? A.value + w.value - 1 : null
    ), C = (o) => {
      n("update:modelValue", o);
    };
    m(
      h,
      (o) => {
        C(o);
      },
      { immediate: !0 }
    );
    const F = y(
      () => O.value.map((o) => ({
        text: o.toString(),
        value: o
      }))
    ), P = T(w.value);
    return m(P, (o) => {
      n("update:itemsPerPage", o), n("update:perPage", o);
    }), m(
      w,
      (o) => {
        P.value = o;
      },
      { immediate: !0 }
    ), m(
      z,
      (o) => {
        h.value = o;
      },
      { immediate: !0 }
    ), (o, V) => (i(), f("div", {
      class: c([a.backgroundColor, "w-full px-6 py-3 border-t flex flex-row items-center gap-4 justify-center sm:justify-between"])
    }, [
      g(o.$slots, "rowsPerPage", Q(W({ value: P.value, items: t(F) })), () => [
        I(t(be), {
          modelValue: P.value,
          "onUpdate:modelValue": V[0] || (V[0] = (b) => P.value = b),
          items: t(F),
          "hide-check-icon": "",
          placeholder: "Select",
          class: "w-30 order-1",
          top: ""
        }, null, 8, ["modelValue", "items"])
      ]),
      r("p", Se, [
        g(o.$slots, "meta", Q(W({ showingText: a.showingText, start: t(A), end: t(S), fromText: a.fromText, totalItems: t(v), dataText: a.dataText })), () => [
          r("span", Ce, u(a.showingText), 1),
          r("span", Ve, u(t(A)), 1),
          ke,
          r("span", $e, u(t(S)), 1),
          r("span", null, u(a.fromText), 1),
          r("span", Be, u(t(v)), 1),
          r("span", Te, u(a.dataText), 1)
        ])
      ]),
      Ne,
      r("div", De, [
        I(t(ve), ee({
          modelValue: h.value,
          "onUpdate:modelValue": V[1] || (V[1] = (b) => h.value = b),
          "total-items": t(v),
          "items-per-page": t(w)
        }, a.pagination), me({ _: 2 }, [
          E(o.$slots, (b, j) => ({
            name: j,
            fn: pe(() => [
              g(o.$slots, j)
            ])
          }))
        ]), 1040, ["modelValue", "total-items", "items-per-page"])
      ])
    ], 2));
  }
}), Ae = { class: "overflow-x-auto rounded-t-md" }, je = { class: "w-full divide-y divide-gray-200" }, ze = ["width"], Oe = ["onClick"], Fe = {
  key: 1,
  class: "text-sm font-semibold uppercase tracking-wider"
}, Ue = ["colspan"], Le = ["colspan"], Ke = /* @__PURE__ */ Z({
  __name: "VDataTable",
  props: {
    modelValue: {
      type: Array,
      default: () => []
    },
    value: {
      type: Array,
      default: () => []
    },
    headers: {
      type: Array,
      default: () => []
    },
    items: {
      type: Array,
      default: () => []
    },
    itemsPerPage: {
      type: Number,
      default: 10
    },
    disableSorting: {
      type: Boolean,
      default: !1
    },
    pagination: {
      type: Object,
      default() {
        return {};
      }
    },
    loading: {
      type: Boolean,
      default: !1
    },
    search: {
      type: String,
      default: ""
    },
    searchBy: {
      type: [String, Array],
      default: ""
    },
    loadingText: {
      type: String,
      default: "Loading..."
    },
    noDataText: {
      type: String,
      default: "Data tidak ditemukan"
    },
    footerColor: {
      type: String,
      default: ""
    },
    serverSide: {
      type: Boolean,
      default: !1
    },
    sortBy: {
      type: String,
      default: ""
    },
    sortDirection: {
      type: String,
      default: ""
    },
    hover: {
      type: Boolean,
      default: !1
    },
    striped: {
      type: Boolean,
      default: !1
    },
    dense: {
      type: Boolean,
      default: !1
    },
    hideFooter: {
      type: Boolean,
      default: !1
    },
    totalItems: {
      type: Number,
      default: 0
    },
    page: {
      type: Number,
      default: 1
    },
    mustSort: {
      type: Boolean,
      default: !1
    },
    noShadow: {
      type: Boolean,
      default: !1
    },
    selectable: {
      type: Boolean,
      default: !1
    },
    headerClass: {
      type: String,
      default: "bg-gray-50"
    },
    bodyClass: {
      type: String,
      default: "bg-white"
    },
    footerClass: {
      type: String,
      default: ""
    },
    columnActiveClass: {
      type: String,
      default: "text-primary-500 hover:text-primary-600"
    },
    columnInactiveClass: {
      type: String,
      default: "text-gray-600 hover:text-primary-500"
    },
    hoverClass: {
      type: String,
      default: "transition duration-300 hover:bg-gray-100"
    },
    stripedClass: {
      type: String,
      default: "even:bg-gray-100"
    },
    tdClass: {
      type: String,
      default: ""
    },
    trClass: {
      type: String,
      default: ""
    },
    wrapperClass: {
      type: String,
      default: ""
    },
    flat: {
      type: Boolean,
      default: !1
    },
    roundedClass: {
      type: String,
      default: "sm:rounded-lg"
    },
    bordered: {
      type: Boolean,
      default: !1
    },
    tile: {
      type: Boolean,
      default: !1
    }
  },
  emits: ["update:search", "update:sortBy", "update:sortDirection", "update:page", "update:itemsPerPage", "update:totalItems", "update:pagination", "page:change", "itemsPerPage:change", "pagination:change", "update:modelValue", "update:value", "sort"],
  setup(a, { emit: n }) {
    const N = a, {
      disableSorting: z,
      itemsPerPage: v,
      pagination: w,
      loading: O,
      search: h,
      searchBy: A,
      serverSide: S,
      items: C,
      hover: F,
      striped: P,
      dense: o,
      footerColor: V,
      headers: b,
      totalItems: j,
      page: M,
      mustSort: te,
      selectable: q,
      modelValue: ae,
      sortBy: le,
      sortDirection: se
    } = _(N), x = T(M.value), k = T(v.value), oe = y(() => (x.value - 1) * Number(k.value)), $ = T(le.value), B = T(se.value), re = y(() => b.value.map((e) => e.value)), G = y(() => {
      let e = JSON.parse(JSON.stringify(C.value));
      return S.value ? e : ($.value && $.value && !S.value && (e.sort((l, s) => {
        const p = +l[$.value], d = +s[$.value];
        return !isNaN(p) && !isNaN(d) ? Number(p) - Number(d) : String(p).localeCompare(String(d));
      }), B.value === "desc" && e.reverse()), h.value && !S.value && (e = e.filter((l) => [...re.value, A.value].flat().some(
        (s) => String(l[s]).toLowerCase().includes(h.value.toLocaleLowerCase())
      ))), e.slice(oe.value).slice(0, k.value));
    }), ne = y(
      () => N.headers.map(
        (e) => ({
          ...e,
          sortable: e.hasOwnProperty("sortable") ? e.sortable : !0,
          sorting: "asc"
        })
      )
    ), ie = (e) => {
      const l = e.sorting && $.value === e.value, s = e.positionFreeze === "right" ? "right-0" : "left-0";
      return [
        l ? N.columnActiveClass : N.columnInactiveClass,
        {
          [`text-${e.align}`]: !!e.align
        },
        e.freeze ? `sticky ${s} bg-gray-50 drop-shadow-lg` : ""
      ];
    }, ue = (e) => {
      const l = e.positionFreeze === "right" ? "right-0" : "left-0";
      return [
        {
          [`text-${e.align}`]: !!e.align
        },
        e.freeze ? `sticky ${l} bg-white drop-shadow-lg` : ""
      ];
    }, de = (e) => {
      if (!e)
        return;
      let l = "";
      te.value ? B.value === "asc" ? l = "desc" : l = "asc" : B.value === "" ? l = "asc" : B.value === "asc" ? l = "desc" : B.value === "desc" && (l = ""), e.sorting = l, $.value = e.value, B.value = l;
    };
    m([$, B], ([e, l]) => {
      n("update:sortBy", e), n("update:sortDirection", l), n("sort", {
        sortBy: e,
        direction: l
      });
    });
    const U = y(() => o.value ? "px-4 py-2" : "px-6 py-3"), K = (e = {}) => {
      n("pagination:change", {
        page: x.value,
        itemsPerPage: k.value,
        ...e
      });
    };
    m(x, (e) => {
      n("page:change", e), n("update:page", e), K({ page: e });
    }), m(k, (e) => {
      n("itemsPerPage:change", e), n("update:itemsPerPage", e), K({ itemsPerPage: e }), x.value = 1;
    }), m(M, (e) => {
      x.value = e;
    }), m(v, (e) => {
      k.value = e;
    });
    const D = T([]), R = y({
      get() {
        return C.value.length ? D.value.length == C.value.length : !1;
      },
      set(e) {
        const l = [];
        e && C.value.forEach(function(s) {
          l.push(s);
        }), D.value = l;
      }
    });
    m(
      D,
      (e) => {
        n("update:modelValue", e);
      },
      { deep: !0, immediate: !0 }
    ), m(
      ae,
      (e) => {
        D.value = e;
      },
      { deep: !0, immediate: !0 }
    );
    const ce = y(
      () => j.value > 0 ? (x.value - 1) * v.value + 1 : 1
    );
    return (e, l) => (i(), f("div", {
      class: c(["w-full flex flex-col overflow-hidden", [
        {
          shadow: !a.noShadow && !a.flat,
          [a.roundedClass]: !a.tile,
          border: a.bordered,
          "border-gray-200": a.bordered
        },
        a.wrapperClass
      ]])
    }, [
      r("div", Ae, [
        r("table", je, [
          r("thead", {
            class: c(a.headerClass)
          }, [
            r("tr", {
              class: c({
                "divide divide-x": a.bordered
              })
            }, [
              (i(!0), f(J, null, E(t(ne), (s) => (i(), f("th", {
                key: s.value,
                scope: "col",
                class: c(["text-left py-3 group", [ie(s), t(U), s.class]]),
                width: s.width
              }, [
                t(q) && s.value === "selected" ? g(e.$slots, "header.selectable", { key: 0 }, () => [
                  I(t(Y), {
                    modelValue: t(R),
                    "onUpdate:modelValue": l[0] || (l[0] = (p) => fe(R) ? R.value = p : null)
                  }, null, 8, ["modelValue"])
                ]) : g(e.$slots, `header.${s.value}`, { key: 1 }, () => [
                  !t(z) && s.sortable ? (i(), f("button", {
                    key: 0,
                    role: "button",
                    "aria-label": "Sort",
                    type: "button",
                    class: c(["flex items-center truncate appearance-none text-sm font-semibold uppercase tracking-wider", [
                      s.align ? `justify-${s.align}` : "justify-between"
                    ]]),
                    onClick: ye((p) => de(s), ["prevent"])
                  }, [
                    r("span", null, u(s.text), 1),
                    s.sorting === "desc" ? (i(), X(t(he), {
                      key: 0,
                      class: "ml-2 h-5 w-5"
                    })) : L("", !0),
                    s.sorting === "asc" ? (i(), X(t(Pe), {
                      key: 1,
                      class: "ml-2 h-5 w-5"
                    })) : L("", !0)
                  ], 10, Oe)) : (i(), f("span", Fe, u(s.text), 1))
                ])
              ], 10, ze))), 128))
            ], 2)
          ], 2),
          r("tbody", {
            class: c([t(P) ? "" : "divide-y divide-gray-200", a.bodyClass])
          }, [
            t(G).length < 1 && !t(O) ? g(e.$slots, "empty", { key: 0 }, () => [
              r("tr", null, [
                r("td", {
                  colspan: t(b).length,
                  class: c(["text-center text-gray-600 text-sm whitespace-nowrap", [t(U)]])
                }, u(a.noDataText), 11, Ue)
              ])
            ]) : L("", !0),
            t(O) ? g(e.$slots, "loading", { key: 1 }, () => [
              r("tr", null, [
                r("td", {
                  colspan: t(b).length,
                  class: c(["text-center text-gray-600 text-sm whitespace-nowrap", [t(U)]])
                }, [
                  I(t(xe), {
                    color: "primary",
                    class: "mr-1"
                  }),
                  H(" " + u(a.loadingText), 1)
                ], 10, Le)
              ])
            ]) : (i(!0), f(J, { key: 2 }, E(t(G), (s, p) => (i(), f("tr", {
              key: `item-${p}`,
              class: c({
                group: !0,
                [a.stripedClass]: t(P),
                [a.hoverClass]: t(F),
                "divide-x": a.bordered,
                [a.trClass]: Boolean(a.trClass)
              })
            }, [
              (i(!0), f(J, null, E(t(b), (d) => (i(), f("td", {
                key: `header-${d.value}`,
                class: c(["whitespace-nowrap text-sm text-gray-900", [
                  ue(d),
                  t(U),
                  a.tdClass,
                  d?.tdClass || ""
                ]])
              }, [
                t(q) && d.value === "selected" ? g(e.$slots, "item.selected", { key: 0 }, () => [
                  I(t(Y), {
                    modelValue: D.value,
                    "onUpdate:modelValue": l[1] || (l[1] = (ge) => D.value = ge),
                    value: s
                  }, null, 8, ["modelValue", "value"])
                ]) : d.value === "index" ? g(e.$slots, "item.index", { key: 1 }, () => [
                  H(u(t(ce) + p), 1)
                ]) : g(e.$slots, `item.${d.value}`, {
                  key: 2,
                  item: s,
                  index: p
                }, () => [
                  H(u(t(we)(s, d.value)), 1)
                ])
              ], 2))), 128))
            ], 2))), 128))
          ], 2)
        ])
      ]),
      a.hideFooter ? L("", !0) : g(e.$slots, "footer", { key: 0 }, () => [
        I(Ie, ee({
          modelValue: x.value,
          "onUpdate:modelValue": l[2] || (l[2] = (s) => x.value = s),
          "background-color": t(V) ? t(V) : "",
          class: ["rounded-b-md", a.footerClass],
          "total-items": t(S) ? t(j) : t(C).length,
          itemsPerPage: k.value,
          "onUpdate:itemsPerPage": l[3] || (l[3] = (s) => k.value = s)
        }, t(w)), null, 16, ["modelValue", "background-color", "class", "total-items", "itemsPerPage"])
      ])
    ], 2));
  }
});
export {
  Ke as VDataTable,
  Ie as VDataTablePagination,
  Ke as default
};
