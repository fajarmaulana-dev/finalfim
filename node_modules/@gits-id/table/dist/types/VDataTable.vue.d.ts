import type { PropType } from 'vue';
import type { SortDirection, VDataTableHeader, VDataTableItem } from './types';
declare const _default: {
    new (...args: any[]): {
        $: import("vue").ComponentInternalInstance;
        $data: {};
        $props: Partial<{
            search: string;
            modelValue: unknown[];
            totalItems: number;
            itemsPerPage: number;
            flat: boolean;
            pagination: Record<string, any>;
            page: number;
            value: unknown[];
            items: VDataTableItem[];
            wrapperClass: string;
            tdClass: string;
            headers: VDataTableHeader[];
            disableSorting: boolean;
            loading: boolean;
            searchBy: string | string[];
            loadingText: string;
            noDataText: string;
            footerColor: string;
            serverSide: boolean;
            sortBy: string;
            sortDirection: SortDirection;
            hover: boolean;
            striped: boolean;
            dense: boolean;
            hideFooter: boolean;
            mustSort: boolean;
            noShadow: boolean;
            selectable: boolean;
            headerClass: string;
            bodyClass: string;
            footerClass: string;
            columnActiveClass: string;
            columnInactiveClass: string;
            hoverClass: string;
            stripedClass: string;
            trClass: string;
            roundedClass: string;
            bordered: boolean;
            tile: boolean;
        }> & Omit<Readonly<import("vue").ExtractPropTypes<{
            modelValue: {
                type: ArrayConstructor;
                default: () => never[];
            };
            value: {
                type: ArrayConstructor;
                default: () => never[];
            };
            headers: {
                type: PropType<VDataTableHeader[]>;
                default: () => never[];
            };
            items: {
                type: PropType<VDataTableItem[]>;
                default: () => never[];
            };
            itemsPerPage: {
                type: NumberConstructor;
                default: number;
            };
            disableSorting: {
                type: BooleanConstructor;
                default: boolean;
            };
            pagination: {
                type: ObjectConstructor;
                default(): {};
            };
            loading: {
                type: BooleanConstructor;
                default: boolean;
            };
            search: {
                type: StringConstructor;
                default: string;
            };
            searchBy: {
                type: PropType<string | string[]>;
                default: string;
            };
            loadingText: {
                type: StringConstructor;
                default: string;
            };
            noDataText: {
                type: StringConstructor;
                default: string;
            };
            footerColor: {
                type: StringConstructor;
                default: string;
            };
            serverSide: {
                type: BooleanConstructor;
                default: boolean;
            };
            sortBy: {
                type: StringConstructor;
                default: string;
            };
            sortDirection: {
                type: PropType<SortDirection>;
                default: string;
            };
            hover: {
                type: BooleanConstructor;
                default: boolean;
            };
            striped: {
                type: BooleanConstructor;
                default: boolean;
            };
            dense: {
                type: BooleanConstructor;
                default: boolean;
            };
            hideFooter: {
                type: BooleanConstructor;
                default: boolean;
            };
            totalItems: {
                type: NumberConstructor;
                default: number;
            };
            page: {
                type: NumberConstructor;
                default: number;
            };
            mustSort: {
                type: BooleanConstructor;
                default: boolean;
            };
            noShadow: {
                type: BooleanConstructor;
                default: boolean;
            };
            selectable: {
                type: BooleanConstructor;
                default: boolean;
            };
            headerClass: {
                type: StringConstructor;
                default: string;
            };
            bodyClass: {
                type: StringConstructor;
                default: string;
            };
            footerClass: {
                type: StringConstructor;
                default: string;
            };
            columnActiveClass: {
                type: StringConstructor;
                default: string;
            };
            columnInactiveClass: {
                type: StringConstructor;
                default: string;
            };
            hoverClass: {
                type: StringConstructor;
                default: string;
            };
            stripedClass: {
                type: StringConstructor;
                default: string;
            };
            tdClass: {
                type: StringConstructor;
                default: string;
            };
            trClass: {
                type: StringConstructor;
                default: string;
            };
            wrapperClass: {
                type: StringConstructor;
                default: string;
            };
            flat: {
                type: BooleanConstructor;
                default: boolean;
            };
            roundedClass: {
                type: StringConstructor;
                default: string;
            };
            bordered: {
                type: BooleanConstructor;
                default: boolean;
            };
            tile: {
                type: BooleanConstructor;
                default: boolean;
            };
        }>> & {
            "onUpdate:modelValue"?: ((value: any) => any) | undefined;
            "onUpdate:itemsPerPage"?: ((value: number) => any) | undefined;
            "onUpdate:value"?: ((value: any) => any) | undefined;
            onSort?: ((payload: {
                sortBy: string;
                direction: SortDirection;
            }) => any) | undefined;
            "onUpdate:search"?: ((value: string) => any) | undefined;
            "onUpdate:sortBy"?: ((value: string) => any) | undefined;
            "onUpdate:sortDirection"?: ((value: SortDirection) => any) | undefined;
            "onUpdate:page"?: ((value: number) => any) | undefined;
            "onUpdate:totalItems"?: ((value: number) => any) | undefined;
            "onUpdate:pagination"?: ((value: Record<string, any>) => any) | undefined;
            "onPage:change"?: ((value: number) => any) | undefined;
            "onItemsPerPage:change"?: ((value: number) => any) | undefined;
            "onPagination:change"?: ((value: Record<string, any>) => any) | undefined;
        } & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, "search" | "modelValue" | "totalItems" | "itemsPerPage" | "flat" | "pagination" | "page" | "value" | "items" | "wrapperClass" | "tdClass" | "headers" | "disableSorting" | "loading" | "searchBy" | "loadingText" | "noDataText" | "footerColor" | "serverSide" | "sortBy" | "sortDirection" | "hover" | "striped" | "dense" | "hideFooter" | "mustSort" | "noShadow" | "selectable" | "headerClass" | "bodyClass" | "footerClass" | "columnActiveClass" | "columnInactiveClass" | "hoverClass" | "stripedClass" | "trClass" | "roundedClass" | "bordered" | "tile">;
        $attrs: {
            [x: string]: unknown;
        };
        $refs: {
            [x: string]: unknown;
        };
        $slots: Readonly<{
            [name: string]: import("vue").Slot | undefined;
        }>;
        $root: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
        $parent: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null;
        $emit: ((event: "update:modelValue", value: any) => void) & ((event: "update:itemsPerPage", value: number) => void) & ((event: "sort", payload: {
            sortBy: string;
            direction: SortDirection;
        }) => void) & ((event: "update:value", value: any) => void) & ((event: "update:search", value: string) => void) & ((event: "update:sortBy", value: string) => void) & ((event: "update:sortDirection", value: SortDirection) => void) & ((event: "update:page", value: number) => void) & ((event: "update:totalItems", value: number) => void) & ((event: "update:pagination", value: Record<string, any>) => void) & ((event: "page:change", value: number) => void) & ((event: "itemsPerPage:change", value: number) => void) & ((event: "pagination:change", value: Record<string, any>) => void);
        $el: any;
        $options: import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
            modelValue: {
                type: ArrayConstructor;
                default: () => never[];
            };
            value: {
                type: ArrayConstructor;
                default: () => never[];
            };
            headers: {
                type: PropType<VDataTableHeader[]>;
                default: () => never[];
            };
            items: {
                type: PropType<VDataTableItem[]>;
                default: () => never[];
            };
            itemsPerPage: {
                type: NumberConstructor;
                default: number;
            };
            disableSorting: {
                type: BooleanConstructor;
                default: boolean;
            };
            pagination: {
                type: ObjectConstructor;
                default(): {};
            };
            loading: {
                type: BooleanConstructor;
                default: boolean;
            };
            search: {
                type: StringConstructor;
                default: string;
            };
            searchBy: {
                type: PropType<string | string[]>;
                default: string;
            };
            loadingText: {
                type: StringConstructor;
                default: string;
            };
            noDataText: {
                type: StringConstructor;
                default: string;
            };
            footerColor: {
                type: StringConstructor;
                default: string;
            };
            serverSide: {
                type: BooleanConstructor;
                default: boolean;
            };
            sortBy: {
                type: StringConstructor;
                default: string;
            };
            sortDirection: {
                type: PropType<SortDirection>;
                default: string;
            };
            hover: {
                type: BooleanConstructor;
                default: boolean;
            };
            striped: {
                type: BooleanConstructor;
                default: boolean;
            };
            dense: {
                type: BooleanConstructor;
                default: boolean;
            };
            hideFooter: {
                type: BooleanConstructor;
                default: boolean;
            };
            totalItems: {
                type: NumberConstructor;
                default: number;
            };
            page: {
                type: NumberConstructor;
                default: number;
            };
            mustSort: {
                type: BooleanConstructor;
                default: boolean;
            };
            noShadow: {
                type: BooleanConstructor;
                default: boolean;
            };
            selectable: {
                type: BooleanConstructor;
                default: boolean;
            };
            headerClass: {
                type: StringConstructor;
                default: string;
            };
            bodyClass: {
                type: StringConstructor;
                default: string;
            };
            footerClass: {
                type: StringConstructor;
                default: string;
            };
            columnActiveClass: {
                type: StringConstructor;
                default: string;
            };
            columnInactiveClass: {
                type: StringConstructor;
                default: string;
            };
            hoverClass: {
                type: StringConstructor;
                default: string;
            };
            stripedClass: {
                type: StringConstructor;
                default: string;
            };
            tdClass: {
                type: StringConstructor;
                default: string;
            };
            trClass: {
                type: StringConstructor;
                default: string;
            };
            wrapperClass: {
                type: StringConstructor;
                default: string;
            };
            flat: {
                type: BooleanConstructor;
                default: boolean;
            };
            roundedClass: {
                type: StringConstructor;
                default: string;
            };
            bordered: {
                type: BooleanConstructor;
                default: boolean;
            };
            tile: {
                type: BooleanConstructor;
                default: boolean;
            };
        }>> & {
            "onUpdate:modelValue"?: ((value: any) => any) | undefined;
            "onUpdate:itemsPerPage"?: ((value: number) => any) | undefined;
            "onUpdate:value"?: ((value: any) => any) | undefined;
            onSort?: ((payload: {
                sortBy: string;
                direction: SortDirection;
            }) => any) | undefined;
            "onUpdate:search"?: ((value: string) => any) | undefined;
            "onUpdate:sortBy"?: ((value: string) => any) | undefined;
            "onUpdate:sortDirection"?: ((value: SortDirection) => any) | undefined;
            "onUpdate:page"?: ((value: number) => any) | undefined;
            "onUpdate:totalItems"?: ((value: number) => any) | undefined;
            "onUpdate:pagination"?: ((value: Record<string, any>) => any) | undefined;
            "onPage:change"?: ((value: number) => any) | undefined;
            "onItemsPerPage:change"?: ((value: number) => any) | undefined;
            "onPagination:change"?: ((value: Record<string, any>) => any) | undefined;
        }, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
            "update:search": (value: string) => void;
        } & {
            "update:sortBy": (value: string) => void;
        } & {
            "update:sortDirection": (value: SortDirection) => void;
        } & {
            "update:page": (value: number) => void;
        } & {
            "update:itemsPerPage": (value: number) => void;
        } & {
            "update:totalItems": (value: number) => void;
        } & {
            "update:pagination": (value: Record<string, any>) => void;
        } & {
            "page:change": (value: number) => void;
        } & {
            "itemsPerPage:change": (value: number) => void;
        } & {
            "pagination:change": (value: Record<string, any>) => void;
        } & {
            "update:modelValue": (value: any) => void;
        } & {
            "update:value": (value: any) => void;
        } & {
            sort: (payload: {
                sortBy: string;
                direction: SortDirection;
            }) => void;
        }, string, {
            search: string;
            modelValue: unknown[];
            totalItems: number;
            itemsPerPage: number;
            flat: boolean;
            pagination: Record<string, any>;
            page: number;
            value: unknown[];
            items: VDataTableItem[];
            wrapperClass: string;
            tdClass: string;
            headers: VDataTableHeader[];
            disableSorting: boolean;
            loading: boolean;
            searchBy: string | string[];
            loadingText: string;
            noDataText: string;
            footerColor: string;
            serverSide: boolean;
            sortBy: string;
            sortDirection: SortDirection;
            hover: boolean;
            striped: boolean;
            dense: boolean;
            hideFooter: boolean;
            mustSort: boolean;
            noShadow: boolean;
            selectable: boolean;
            headerClass: string;
            bodyClass: string;
            footerClass: string;
            columnActiveClass: string;
            columnInactiveClass: string;
            hoverClass: string;
            stripedClass: string;
            trClass: string;
            roundedClass: string;
            bordered: boolean;
            tile: boolean;
        }> & {
            beforeCreate?: ((() => void) | (() => void)[]) | undefined;
            created?: ((() => void) | (() => void)[]) | undefined;
            beforeMount?: ((() => void) | (() => void)[]) | undefined;
            mounted?: ((() => void) | (() => void)[]) | undefined;
            beforeUpdate?: ((() => void) | (() => void)[]) | undefined;
            updated?: ((() => void) | (() => void)[]) | undefined;
            activated?: ((() => void) | (() => void)[]) | undefined;
            deactivated?: ((() => void) | (() => void)[]) | undefined;
            beforeDestroy?: ((() => void) | (() => void)[]) | undefined;
            beforeUnmount?: ((() => void) | (() => void)[]) | undefined;
            destroyed?: ((() => void) | (() => void)[]) | undefined;
            unmounted?: ((() => void) | (() => void)[]) | undefined;
            renderTracked?: (((e: import("vue").DebuggerEvent) => void) | ((e: import("vue").DebuggerEvent) => void)[]) | undefined;
            renderTriggered?: (((e: import("vue").DebuggerEvent) => void) | ((e: import("vue").DebuggerEvent) => void)[]) | undefined;
            errorCaptured?: (((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null, info: string) => boolean | void) | ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>> | null, info: string) => boolean | void)[]) | undefined;
        };
        $forceUpdate: () => void;
        $nextTick: typeof import("vue").nextTick;
        $watch(source: string | Function, cb: Function, options?: import("vue").WatchOptions<boolean> | undefined): import("vue").WatchStopHandle;
    } & Readonly<import("vue").ExtractPropTypes<{
        modelValue: {
            type: ArrayConstructor;
            default: () => never[];
        };
        value: {
            type: ArrayConstructor;
            default: () => never[];
        };
        headers: {
            type: PropType<VDataTableHeader[]>;
            default: () => never[];
        };
        items: {
            type: PropType<VDataTableItem[]>;
            default: () => never[];
        };
        itemsPerPage: {
            type: NumberConstructor;
            default: number;
        };
        disableSorting: {
            type: BooleanConstructor;
            default: boolean;
        };
        pagination: {
            type: ObjectConstructor;
            default(): {};
        };
        loading: {
            type: BooleanConstructor;
            default: boolean;
        };
        search: {
            type: StringConstructor;
            default: string;
        };
        searchBy: {
            type: PropType<string | string[]>;
            default: string;
        };
        loadingText: {
            type: StringConstructor;
            default: string;
        };
        noDataText: {
            type: StringConstructor;
            default: string;
        };
        footerColor: {
            type: StringConstructor;
            default: string;
        };
        serverSide: {
            type: BooleanConstructor;
            default: boolean;
        };
        sortBy: {
            type: StringConstructor;
            default: string;
        };
        sortDirection: {
            type: PropType<SortDirection>;
            default: string;
        };
        hover: {
            type: BooleanConstructor;
            default: boolean;
        };
        striped: {
            type: BooleanConstructor;
            default: boolean;
        };
        dense: {
            type: BooleanConstructor;
            default: boolean;
        };
        hideFooter: {
            type: BooleanConstructor;
            default: boolean;
        };
        totalItems: {
            type: NumberConstructor;
            default: number;
        };
        page: {
            type: NumberConstructor;
            default: number;
        };
        mustSort: {
            type: BooleanConstructor;
            default: boolean;
        };
        noShadow: {
            type: BooleanConstructor;
            default: boolean;
        };
        selectable: {
            type: BooleanConstructor;
            default: boolean;
        };
        headerClass: {
            type: StringConstructor;
            default: string;
        };
        bodyClass: {
            type: StringConstructor;
            default: string;
        };
        footerClass: {
            type: StringConstructor;
            default: string;
        };
        columnActiveClass: {
            type: StringConstructor;
            default: string;
        };
        columnInactiveClass: {
            type: StringConstructor;
            default: string;
        };
        hoverClass: {
            type: StringConstructor;
            default: string;
        };
        stripedClass: {
            type: StringConstructor;
            default: string;
        };
        tdClass: {
            type: StringConstructor;
            default: string;
        };
        trClass: {
            type: StringConstructor;
            default: string;
        };
        wrapperClass: {
            type: StringConstructor;
            default: string;
        };
        flat: {
            type: BooleanConstructor;
            default: boolean;
        };
        roundedClass: {
            type: StringConstructor;
            default: string;
        };
        bordered: {
            type: BooleanConstructor;
            default: boolean;
        };
        tile: {
            type: BooleanConstructor;
            default: boolean;
        };
    }>> & {
        "onUpdate:modelValue"?: ((value: any) => any) | undefined;
        "onUpdate:itemsPerPage"?: ((value: number) => any) | undefined;
        "onUpdate:value"?: ((value: any) => any) | undefined;
        onSort?: ((payload: {
            sortBy: string;
            direction: SortDirection;
        }) => any) | undefined;
        "onUpdate:search"?: ((value: string) => any) | undefined;
        "onUpdate:sortBy"?: ((value: string) => any) | undefined;
        "onUpdate:sortDirection"?: ((value: SortDirection) => any) | undefined;
        "onUpdate:page"?: ((value: number) => any) | undefined;
        "onUpdate:totalItems"?: ((value: number) => any) | undefined;
        "onUpdate:pagination"?: ((value: Record<string, any>) => any) | undefined;
        "onPage:change"?: ((value: number) => any) | undefined;
        "onItemsPerPage:change"?: ((value: number) => any) | undefined;
        "onPagination:change"?: ((value: Record<string, any>) => any) | undefined;
    } & import("vue").ShallowUnwrapRef<{}> & {} & import("vue").ComponentCustomProperties;
    __isFragment?: undefined;
    __isTeleport?: undefined;
    __isSuspense?: undefined;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    modelValue: {
        type: ArrayConstructor;
        default: () => never[];
    };
    value: {
        type: ArrayConstructor;
        default: () => never[];
    };
    headers: {
        type: PropType<VDataTableHeader[]>;
        default: () => never[];
    };
    items: {
        type: PropType<VDataTableItem[]>;
        default: () => never[];
    };
    itemsPerPage: {
        type: NumberConstructor;
        default: number;
    };
    disableSorting: {
        type: BooleanConstructor;
        default: boolean;
    };
    pagination: {
        type: ObjectConstructor;
        default(): {};
    };
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    search: {
        type: StringConstructor;
        default: string;
    };
    searchBy: {
        type: PropType<string | string[]>;
        default: string;
    };
    loadingText: {
        type: StringConstructor;
        default: string;
    };
    noDataText: {
        type: StringConstructor;
        default: string;
    };
    footerColor: {
        type: StringConstructor;
        default: string;
    };
    serverSide: {
        type: BooleanConstructor;
        default: boolean;
    };
    sortBy: {
        type: StringConstructor;
        default: string;
    };
    sortDirection: {
        type: PropType<SortDirection>;
        default: string;
    };
    hover: {
        type: BooleanConstructor;
        default: boolean;
    };
    striped: {
        type: BooleanConstructor;
        default: boolean;
    };
    dense: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideFooter: {
        type: BooleanConstructor;
        default: boolean;
    };
    totalItems: {
        type: NumberConstructor;
        default: number;
    };
    page: {
        type: NumberConstructor;
        default: number;
    };
    mustSort: {
        type: BooleanConstructor;
        default: boolean;
    };
    noShadow: {
        type: BooleanConstructor;
        default: boolean;
    };
    selectable: {
        type: BooleanConstructor;
        default: boolean;
    };
    headerClass: {
        type: StringConstructor;
        default: string;
    };
    bodyClass: {
        type: StringConstructor;
        default: string;
    };
    footerClass: {
        type: StringConstructor;
        default: string;
    };
    columnActiveClass: {
        type: StringConstructor;
        default: string;
    };
    columnInactiveClass: {
        type: StringConstructor;
        default: string;
    };
    hoverClass: {
        type: StringConstructor;
        default: string;
    };
    stripedClass: {
        type: StringConstructor;
        default: string;
    };
    tdClass: {
        type: StringConstructor;
        default: string;
    };
    trClass: {
        type: StringConstructor;
        default: string;
    };
    wrapperClass: {
        type: StringConstructor;
        default: string;
    };
    flat: {
        type: BooleanConstructor;
        default: boolean;
    };
    roundedClass: {
        type: StringConstructor;
        default: string;
    };
    bordered: {
        type: BooleanConstructor;
        default: boolean;
    };
    tile: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & {
    "onUpdate:modelValue"?: ((value: any) => any) | undefined;
    "onUpdate:itemsPerPage"?: ((value: number) => any) | undefined;
    "onUpdate:value"?: ((value: any) => any) | undefined;
    onSort?: ((payload: {
        sortBy: string;
        direction: SortDirection;
    }) => any) | undefined;
    "onUpdate:search"?: ((value: string) => any) | undefined;
    "onUpdate:sortBy"?: ((value: string) => any) | undefined;
    "onUpdate:sortDirection"?: ((value: SortDirection) => any) | undefined;
    "onUpdate:page"?: ((value: number) => any) | undefined;
    "onUpdate:totalItems"?: ((value: number) => any) | undefined;
    "onUpdate:pagination"?: ((value: Record<string, any>) => any) | undefined;
    "onPage:change"?: ((value: number) => any) | undefined;
    "onItemsPerPage:change"?: ((value: number) => any) | undefined;
    "onPagination:change"?: ((value: Record<string, any>) => any) | undefined;
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    "update:search": (value: string) => void;
} & {
    "update:sortBy": (value: string) => void;
} & {
    "update:sortDirection": (value: SortDirection) => void;
} & {
    "update:page": (value: number) => void;
} & {
    "update:itemsPerPage": (value: number) => void;
} & {
    "update:totalItems": (value: number) => void;
} & {
    "update:pagination": (value: Record<string, any>) => void;
} & {
    "page:change": (value: number) => void;
} & {
    "itemsPerPage:change": (value: number) => void;
} & {
    "pagination:change": (value: Record<string, any>) => void;
} & {
    "update:modelValue": (value: any) => void;
} & {
    "update:value": (value: any) => void;
} & {
    sort: (payload: {
        sortBy: string;
        direction: SortDirection;
    }) => void;
}, string, {
    search: string;
    modelValue: unknown[];
    totalItems: number;
    itemsPerPage: number;
    flat: boolean;
    pagination: Record<string, any>;
    page: number;
    value: unknown[];
    items: VDataTableItem[];
    wrapperClass: string;
    tdClass: string;
    headers: VDataTableHeader[];
    disableSorting: boolean;
    loading: boolean;
    searchBy: string | string[];
    loadingText: string;
    noDataText: string;
    footerColor: string;
    serverSide: boolean;
    sortBy: string;
    sortDirection: SortDirection;
    hover: boolean;
    striped: boolean;
    dense: boolean;
    hideFooter: boolean;
    mustSort: boolean;
    noShadow: boolean;
    selectable: boolean;
    headerClass: string;
    bodyClass: string;
    footerClass: string;
    columnActiveClass: string;
    columnInactiveClass: string;
    hoverClass: string;
    stripedClass: string;
    trClass: string;
    roundedClass: string;
    bordered: boolean;
    tile: boolean;
}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & (new () => {
    $slots: typeof import('./VDataTable.vue.__VLS_template').default;
});
export default _default;
