import { computed as o } from "vue";
const g = ["xs", "sm", "default", "lg", "xl"], x = (r) => ({ class: o(() => {
  switch (r) {
    case "xs":
      return "text-xs";
    case "sm":
      return "text-sm";
    case "lg":
      return "text-lg";
    case "xl":
      return "text-xl";
    case "base":
    case "md":
      return "text-base";
    default:
      return "text-sm";
  }
}), size: r }), p = (r) => ({ class: o(() => {
  switch (r) {
    case "xs":
      return "h-[30px]";
    case "sm":
      return "h-[36px]";
    case "lg":
      return "h-[50px]";
    case "xl":
      return "h-[60px]";
    case "default":
    case "md":
    case "base":
    default:
      return "h-[40px]";
  }
}), size: r }), m = [
  "default",
  "primary",
  "secondary",
  "info",
  "success",
  "warning",
  "error",
  "dark"
], f = (r, e = "") => {
  switch (r) {
    case "primary":
      return "bg-primary-500";
    case "secondary":
      return "bg-secondary-500";
    case "info":
      return "bg-info-500";
    case "warning":
      return "bg-warning-500";
    case "success":
      return "bg-success-500";
    case "error":
      return "bg-error-500";
    case "default":
    default:
      return e || "bg-gray-600";
  }
}, b = (r, e = "") => {
  switch (r) {
    case "primary":
      return "text-primary-500";
    case "secondary":
      return "text-secondary-500";
    case "info":
      return "text-info-500";
    case "warning":
      return "text-warning-500";
    case "success":
      return "text-success-500";
    case "error":
      return "text-error-500";
    case "default":
    default:
      return e || "text-gray-900";
  }
}, c = "disabled:cursor-not-allowed disabled:shadow-none disabled:text-gray-400 disabled:placeholder-gray-400", y = "border shadow-sm rounded-md text-gray-800 " + c, i = `border-error-500 text-error-500
  focus-visible:ring-error-500/30 focus-visible:border-error-500 ring-error-500 focus:border-error-500 focus:ring-error-500`, h = (r = !1) => {
  let e = [
    "transition duration-300 border rounded-md text-gray-800",
    "focus:border-primary-500 focus:ring-primary-500 focus:ring focus:ring-opacity-50",
    c
  ];
  return r ? e.push(i) : e.push("border-gray-300 hover:border-gray-400"), e.join(" ");
}, w = (r, e, s = void 0) => {
  const t = (u) => String.prototype.split.call(e, u).filter(Boolean).reduce(
    (a, l) => a != null ? a[l] : a,
    r
  ), n = t(/[,[\]]+?/) || t(/[,[\].]+?/);
  return n === void 0 || n === r ? s : n;
}, v = (r) => r?.replace(/(<([^>]+)>)/gi, ""), C = (r) => {
  const e = new FormData();
  for (let s in r)
    e.append(s, r[s]);
  return e;
}, N = (r, e = "text", s = "value") => r?.map((t) => ({
  text: t[e],
  value: t[s]
})) || [];
export {
  w as get,
  f as getBgColor,
  b as getTextColor,
  y as inputClasses,
  c as inputDisabledClasses,
  i as inputErrorClasses,
  g as sizes,
  v as stripTags,
  m as themeColors,
  C as toFormData,
  N as toOptions,
  p as useHeight,
  h as useInputClasses,
  x as useTextSize
};
