import { defineComponent as D, toRefs as H, ref as y, openBlock as b, createElementBlock as _, unref as e, normalizeClass as T, createElementVNode as B, renderSlot as m, createBlock as U, withCtx as V, createVNode as h, createCommentVNode as $, onBeforeUpdate as le, onMounted as oe, watch as z, computed as ae, Fragment as se, renderList as ne, mergeProps as re, createTextVNode as ie, toDisplayString as fe, nextTick as ue } from "vue";
import { TrashIcon as ce, ChevronLeftIcon as de, ChevronRightIcon as pe } from "@heroicons/vue/outline";
import O from "@gits-id/button";
import { getBgColor as ve } from "@gits-id/utils";
const me = ["id"], ye = /* @__PURE__ */ D({
  __name: "VTab",
  props: {
    item: {
      type: Object,
      default: null
    },
    index: {
      type: Number,
      default: 0
    },
    active: {
      type: Boolean,
      default: !1
    },
    removeable: {
      type: Boolean,
      default: !1
    },
    getRef: {
      type: Function,
      default: void 0
    },
    vertical: {
      type: Boolean,
      default: !1
    },
    activeClass: {
      type: String,
      default: "font-semibold"
    },
    inactiveClass: {
      type: String,
      default: ""
    },
    defaultClass: {
      type: String,
      default: ""
    }
  },
  emits: ["click", "remove"],
  setup(c, { emit: i }) {
    const f = c, {
      index: n,
      active: d,
      item: R,
      removeable: W,
      vertical: x,
      activeClass: L,
      inactiveClass: E,
      defaultClass: p
    } = H(f), N = y(null), w = y(0), k = (a, l) => {
      i("click", { index: a, event: l, item: R.value });
    }, A = (a) => i("remove", a), I = (a) => {
      N.value = a, f.getRef && f.getRef(a);
    };
    return (a, l) => (b(), _("div", {
      id: `tab-item-${e(n)}`,
      ref: I,
      class: T(["focus:outline-none text-base flex items-center justify-between gap-y-1 transition duration-300 px-4 py-3 cursor-pointer h-full", [
        e(p),
        e(d) ? e(L) : e(E),
        e(x) ? "w-full min-w-full" : ""
      ]])
    }, [
      B("div", {
        onClick: l[0] || (l[0] = (s) => k(e(n), s)),
        onMouseover: l[1] || (l[1] = (s) => w.value = e(n)),
        onMouseout: l[2] || (l[2] = (s) => w.value = -1)
      }, [
        m(a.$slots, "default")
      ], 32),
      e(d) && e(W) ? (b(), U(e(O), {
        key: 0,
        class: "ml-2 !p-0",
        color: "error",
        "x-small": "",
        text: "",
        icon: "",
        type: "button",
        onClick: l[3] || (l[3] = (s) => A(e(n)))
      }, {
        default: V(() => [
          h(e(ce), { class: "w-5 h-5" })
        ]),
        _: 1
      })) : $("", !0)
    ], 10, me));
  }
});
const be = (c, i) => {
  const f = c.__vccOpts || c;
  for (const [n, d] of i)
    f[n] = d;
  return f;
}, ge = /* @__PURE__ */ D({
  __name: "VTabs",
  props: {
    modelValue: {
      type: [Number, String],
      default: 0
    },
    items: {
      type: Array,
      default: () => []
    },
    itemText: {
      type: String,
      default: "text"
    },
    color: {
      type: String,
      default: "primary"
    },
    showArrows: {
      type: Boolean,
      default: !1
    },
    centerActive: {
      type: Boolean,
      default: !1
    },
    removeable: {
      type: Boolean,
      default: !1
    },
    vertical: {
      type: Boolean,
      default: !1
    },
    defaultWrapperClass: {
      type: String,
      default: "flex items-center"
    },
    wrapperClass: {
      type: String,
      default: ""
    },
    hideSlider: {
      type: Boolean,
      default: !1
    },
    activeClass: {
      type: String,
      default: "font-semibold"
    },
    inactiveClass: {
      type: String,
      default: ""
    },
    defaultClass: {
      type: String,
      default: ""
    },
    contentClass: {
      type: String,
      default: ""
    }
  },
  emits: ["update:modelValue", "change", "remove"],
  setup(c, { emit: i }) {
    const f = c, {
      modelValue: n,
      items: d,
      itemText: R,
      color: W,
      showArrows: x,
      centerActive: L,
      removeable: E,
      vertical: p,
      defaultWrapperClass: N,
      wrapperClass: w,
      hideSlider: k,
      activeClass: A,
      defaultClass: I,
      contentClass: a,
      inactiveClass: l
    } = H(f), s = y(n.value), M = y([]), S = y(), v = y(), q = (t) => {
      t && M.value.push(t);
    };
    le(() => {
      M.value = [];
    });
    const g = (t) => {
      S.value && (S.value.scrollLeft = S.value.scrollLeft + t);
    }, G = ({ index: t, event: r }) => {
      s.value = t;
      const o = r.target, u = o.parentElement, C = o.offsetParent, j = u.nextSibling, F = u.previousSibling;
      if (!!u)
        if (L.value) {
          const Y = o.offsetLeft, Z = o.offsetWidth, ee = C.offsetWidth, te = Y + Z / 2 - ee / 2;
          o.parentElement.scrollTo({
            left: te
          });
        } else
          C.children[C.children.length - 1] === o ? g(C.offsetWidth) : j && j.offsetLeft > C.offsetWidth ? g(j.offsetWidth) : F && F.offsetLeft < o.offsetLeft && g(-F.offsetWidth);
    }, P = (t) => {
      k.value || ue(() => {
        const r = M.value[t];
        if (!r) {
          console.warn("Tab item not found", r);
          return;
        }
        v.value && (p.value ? (v.value.style.top = r.offsetTop + "px", v.value.style.height = r.offsetHeight + "px") : (v.value.style.left = r.offsetLeft + "px", v.value.style.width = r.offsetWidth + "px"));
      });
    };
    oe(() => {
      P(+s.value);
    }), z(s, (t) => {
      i("update:modelValue", t), i("change", t), P(+t);
    }), z(n, (t) => {
      s.value = t;
    });
    const J = () => g(-200), K = () => g(200), Q = (t) => {
      i("remove", t);
    }, X = ae(() => ve(W.value));
    return (t, r) => (b(), _("div", {
      class: T([e(N), e(w)])
    }, [
      e(x) ? m(t.$slots, "previous", { key: 0 }, () => [
        B("div", null, [
          h(e(O), {
            icon: "",
            text: "",
            small: "",
            "no-ring": "",
            onClick: J
          }, {
            default: V(() => [
              h(e(de), { class: "w-full h-full" })
            ]),
            _: 1
          })
        ])
      ], !0) : $("", !0),
      m(t.$slots, "prepend", {}, void 0, !0),
      B("div", {
        ref_key: "tabContent",
        ref: S,
        class: T(["flex items-center gap-x-1 whitespace-nowrap overflow-x-auto tab-items h-full relative", [e(p) ? "flex-col" : "flex-row", e(a)]])
      }, [
        m(t.$slots, "default", {}, () => [
          (b(!0), _(se, null, ne(e(d), (o, u) => (b(), U(ye, re({
            key: u,
            index: u,
            item: o,
            "get-ref": q,
            active: s.value === u,
            removeable: e(E),
            vertical: e(p),
            "active-class": e(A),
            "inactive-class": e(l),
            "default-class": e(I)
          }, o, {
            onRemove: Q,
            onClick: G
          }), {
            default: V(() => [
              ie(fe(o[e(R)]), 1)
            ]),
            _: 2
          }, 1040, ["index", "item", "active", "removeable", "vertical", "active-class", "inactive-class", "default-class"]))), 128))
        ], !0),
        e(k) ? $("", !0) : (b(), _("div", {
          key: 0,
          id: "tab-slider",
          ref_key: "tabSlider",
          ref: v,
          class: T(["transition-all duration-300 absolute", [
            e(X),
            e(p) ? "w-1 inset-y-0 left-0" : "h-[3px] min-w-[3rem] max-w-md inset-x-0 bottom-0"
          ]])
        }, null, 2))
      ], 2),
      m(t.$slots, "append", {}, void 0, !0),
      e(x) ? m(t.$slots, "next", { key: 1 }, () => [
        B("div", null, [
          h(e(O), {
            icon: "",
            text: "",
            small: "",
            "no-ring": "",
            onClick: K
          }, {
            default: V(() => [
              h(e(pe), { class: "w-full h-full" })
            ]),
            _: 1
          })
        ])
      ], !0) : $("", !0)
    ], 2));
  }
}), ke = /* @__PURE__ */ be(ge, [["__scopeId", "data-v-3adb590e"]]);
export {
  ye as VTab,
  ke as VTabs,
  ke as default
};
